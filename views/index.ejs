<%- include('partials/header') %>

<form id="talent-search-form" style="padding-top: 20px; margin-bottom: 2rem;">
  <div class="row">
    <div class="form-group col-sm-8">
      <input type="text" class="form-control" id="talent-search-query" placeholder="Search for talents">
    </div>
    <div class="col-sm-4">
      <button type="submit" class="btn btn-primary">Search</button>
    </div>
  </div>
</form>

<div id="talent-pagination" class="container">
</div>

<script>
  const talentRepo = new TalentRepository();
  let currentPage = 1;
  loadCurrentPage();

  $(document).on('click', "#next-page", function(e) {
    currentPage += 1;
    loadCurrentPage();
  })

  $(document).on('click', "#prev-page", function(e) {
    if (currentPage > 1) {
      currentPage -= 1;
    }
    loadCurrentPage();
  })

  $("#talent-search-form").submit(function (e) {
    e.preventDefault();

    currentPage = 1;
    loadCurrentPage();
  });

  async function loadCurrentPage() {
    try {
      const page = currentPage;
      setLoadingState();
      
      const limit = 10;
      const offset = (page - 1) * limit;
      const query = $("#talent-search-query").val();
      const isSearch = query !== undefined && query !== null && query.length > 0;
      
      let talents;

      if (isSearch) {
        talents = await talentRepo.findAll({ query, limit, offset })
      } else {
        talents = await talentRepo.findAll({ limit, offset })
      }

      const talentGrid = renderTalentGrid(talents);
      const pageNavigationView = renderPageNavigationView(page);
      
      $("#talent-pagination").empty();
      $("#talent-pagination").append(talentGrid);
      $("#talent-pagination").append(pageNavigationView);
    } catch (e) {
      showError(e);
    }
  }

  function renderPageNavigationView(page) {
    return `
    <nav>
      <ul class="pagination">
        <li class="page-item"><a class="page-link" href="#" id="prev-page">Previous</a></li>
        <li class="page-item"><a class="page-link" href="#">${page}</a></li>
        <li class="page-item"><a class="page-link" href="#" id="next-page">Next</a></li>
      </ul>
    </nav>
    `
  }

  function setLoadingState() {
    $("#talent-pagination").empty();
    $("#talent-pagination").append(`
    <div class="spinner-border" role="status">
    </div>
    `);
  }

  // TODO: cut off description beyond a certain length
  function renderTalentCard(talent) {
    return `
<div class="card" style="width: 20rem;">
  <img class="card-img-top" src="${talent.profile_picture_url}">
  <div class="card-body">
    <h5 class="card-title">${talent.name}</h5>
    <p class="card-text">${talent.description}</p>
    <a href="/talents/${talent.id}" class="btn btn-primary">View Profile</a>
  </div>
</div>
    `;
  }

  function renderTalentGrid(talents) {
    const talentCards = talents
      .map(t => renderTalentCard(t))
      .map(c => `
      <div class="col-sm-4">
        ${c}
      </div>
      `);
    
    const talentCardsOfThree = [];
    let chunk = [];
    for (let talentCard of talentCards) {
      chunk.push(talentCard);
      if (chunk.length === 3) {
        talentCardsOfThree.push(chunk);
        chunk = [];
      }
    }

    if (chunk.length > 0) {
      talentCardsOfThree.push(chunk);
    }

    const rows = talentCardsOfThree
      .map(cards => `
        <div class='row' style="margin-bottom: 2rem;">
          ${cards.join('\n')}
        </div>
      `)
      .join('\n');
    
    return rows;
  }

  function showError(e) {
    console.log(e);
    let message = "Something went wrong."

    if (e.status) {
      message = `Network request failed with status ${e.status}`
    }

    $("#talent-pagination").empty();
    $("#talent-pagination").append(`
      <div class="alert alert-danger" role="alert">
        ${message}
      </div>
    `);
  }
</script>

<%- include('partials/footer') %>